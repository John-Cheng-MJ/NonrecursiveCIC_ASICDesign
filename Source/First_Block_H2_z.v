// -------------------------------------------------------------
// 
// File Name: F:\verilogTest\2nd\hdlsrc\NonCIC_Final\First_Block_H2_z.v
// Created: 2022-03-05 12:50:35
// 
// Generated by MATLAB 9.9 and HDL Coder 3.17
// 
// -------------------------------------------------------------


// -------------------------------------------------------------
// 
// Module: First_Block_H2_z
// Source Path: NonCIC_Final/Non-recursive CIC1/First Block H2(z)
// Hierarchy Level: 1
// 
// -------------------------------------------------------------

`timescale 1 ns / 1 ns

module First_Block_H2_z
          (clk,
           enb_1_12_0,
           In1,
           Out1);


  input   clk;
  input   enb_1_12_0;
  input   signed [18:0] In1;  // sfix19_En14
  output  signed [31:0] Out1;  // sfix32_En28


  reg signed [18:0] Delay_out1;  // sfix19_En14
  wire signed [19:0] Add_add_cast;  // sfix20_En14
  wire signed [19:0] Add_add_cast_1;  // sfix20_En14
  wire signed [19:0] Add_add_temp;  // sfix20_En14
  wire signed [18:0] Add_cast;  // sfix19_En14
  wire signed [18:0] Add_out1;  // sfix19_En15
  wire signed [38:0] Gain_cast;  // sfix39_En34
  wire signed [37:0] Gain_cast_1;  // sfix38_En34
  wire signed [18:0] Gain_out1;  // sfix19_En16
  reg signed [18:0] Delay1_out1;  // sfix19_En16
  wire signed [19:0] Add1_add_cast;  // sfix20_En16
  wire signed [19:0] Add1_add_cast_1;  // sfix20_En16
  wire signed [19:0] Add1_out1;  // sfix20_En16
  wire signed [39:0] Gain1_cast;  // sfix40_En35
  wire signed [38:0] Gain1_cast_1;  // sfix39_En35
  wire signed [18:0] Gain1_out1;  // sfix19_En16
  reg signed [18:0] Delay2_out1;  // sfix19_En16
  wire signed [18:0] Add2_add_cast;  // sfix19_En15
  wire signed [18:0] Add2_add_cast_1;  // sfix19_En15
  wire signed [18:0] Add2_out1;  // sfix19_En15
  wire signed [38:0] Gain2_cast;  // sfix39_En34
  wire signed [37:0] Gain2_cast_1;  // sfix38_En34
  wire signed [18:0] Gain2_out1;  // sfix19_En16
  reg signed [18:0] Delay3_out1;  // sfix19_En16
  wire signed [18:0] Add3_add_cast;  // sfix19_En15
  wire signed [18:0] Add3_add_cast_1;  // sfix19_En15
  wire signed [18:0] Add3_out1;  // sfix19_En15
  wire signed [38:0] Gain3_cast;  // sfix39_En34
  wire signed [37:0] Gain3_cast_1;  // sfix38_En34
  wire signed [18:0] Gain3_out1;  // sfix19_En16
  reg signed [18:0] Delay4_out1;  // sfix19_En16
  wire signed [18:0] Add4_add_cast;  // sfix19_En15
  wire signed [18:0] Add4_add_cast_1;  // sfix19_En15
  wire signed [18:0] Add4_out1;  // sfix19_En15
  wire signed [38:0] Gain4_cast;  // sfix39_En34
  wire signed [37:0] Gain4_cast_1;  // sfix38_En34
  wire signed [18:0] Gain4_out1;  // sfix19_En16
  reg signed [18:0] Delay5_out1;  // sfix19_En16
  wire signed [19:0] Add5_add_cast;  // sfix20_En16
  wire signed [19:0] Add5_add_cast_1;  // sfix20_En16
  wire signed [19:0] Add5_out1;  // sfix20_En16
  wire signed [39:0] Gain5_cast;  // sfix40_En35
  wire signed [38:0] Gain5_cast_1;  // sfix39_En35
  wire signed [20:0] Gain5_out1;  // sfix21_En17
  reg signed [20:0] Delay6_out1;  // sfix21_En17
  wire signed [21:0] Add6_add_cast;  // sfix22_En17
  wire signed [21:0] Add6_add_cast_1;  // sfix22_En17
  wire signed [21:0] Add6_add_temp;  // sfix22_En17
  wire signed [20:0] Add6_out1;  // sfix21_En17
  wire signed [40:0] Gain6_cast;  // sfix41_En36
  wire signed [39:0] Gain6_cast_1;  // sfix40_En36
  wire signed [21:0] Gain6_out1;  // sfix22_En18
  reg signed [21:0] Delay7_out1;  // sfix22_En18
  wire signed [22:0] Add7_add_cast;  // sfix23_En18
  wire signed [22:0] Add7_add_cast_1;  // sfix23_En18
  wire signed [22:0] Add7_out1;  // sfix23_En18
  wire signed [42:0] Gain7_cast;  // sfix43_En37
  wire signed [41:0] Gain7_cast_1;  // sfix42_En37
  wire signed [22:0] Gain7_out1;  // sfix23_En19
  reg signed [22:0] Delay8_out1;  // sfix23_En19
  wire signed [23:0] Add8_add_cast;  // sfix24_En19
  wire signed [23:0] Add8_add_cast_1;  // sfix24_En19
  wire signed [23:0] Add8_out1;  // sfix24_En19
  wire signed [43:0] Gain8_cast;  // sfix44_En38
  wire signed [42:0] Gain8_cast_1;  // sfix43_En38
  wire signed [23:0] Gain8_out1;  // sfix24_En20
  reg signed [23:0] Delay9_out1;  // sfix24_En20
  wire signed [24:0] Add9_add_cast;  // sfix25_En20
  wire signed [24:0] Add9_add_cast_1;  // sfix25_En20
  wire signed [24:0] Add9_add_temp;  // sfix25_En20
  wire signed [23:0] Add9_out1;  // sfix24_En20
  wire signed [43:0] Gain9_cast;  // sfix44_En39
  wire signed [42:0] Gain9_cast_1;  // sfix43_En39
  wire signed [24:0] Gain9_out1;  // sfix25_En21
  reg signed [24:0] Delay10_out1;  // sfix25_En21
  wire signed [25:0] Add10_add_cast;  // sfix26_En21
  wire signed [25:0] Add10_add_cast_1;  // sfix26_En21
  wire signed [25:0] Add10_out1;  // sfix26_En21
  wire signed [45:0] Gain10_cast;  // sfix46_En40
  wire signed [44:0] Gain10_cast_1;  // sfix45_En40
  wire signed [26:0] Gain10_out1;  // sfix27_En22
  reg signed [26:0] Delay11_out1;  // sfix27_En22
  wire signed [27:0] Add11_add_cast;  // sfix28_En22
  wire signed [27:0] Add11_add_cast_1;  // sfix28_En22
  wire signed [27:0] Add11_add_temp;  // sfix28_En22
  wire signed [26:0] Add11_out1;  // sfix27_En22
  wire signed [46:0] Gain11_cast;  // sfix47_En41
  wire signed [45:0] Gain11_cast_1;  // sfix46_En41
  wire signed [27:0] Gain11_out1;  // sfix28_En23
  reg signed [27:0] Delay12_out1;  // sfix28_En23
  wire signed [28:0] Add12_add_cast;  // sfix29_En23
  wire signed [28:0] Add12_add_cast_1;  // sfix29_En23
  wire signed [28:0] Add12_add_temp;  // sfix29_En23
  wire signed [27:0] Add12_out1;  // sfix28_En23
  wire signed [47:0] Gain12_cast;  // sfix48_En42
  wire signed [46:0] Gain12_cast_1;  // sfix47_En42
  wire signed [28:0] Gain12_out1;  // sfix29_En24
  reg signed [28:0] Delay13_out1;  // sfix29_En24
  wire signed [29:0] Add13_add_cast;  // sfix30_En24
  wire signed [29:0] Add13_add_cast_1;  // sfix30_En24
  wire signed [29:0] Add13_add_temp;  // sfix30_En24
  wire signed [28:0] Add13_out1;  // sfix29_En24
  wire signed [48:0] Gain13_cast;  // sfix49_En43
  wire signed [47:0] Gain13_cast_1;  // sfix48_En43
  wire signed [28:0] Gain13_out1;  // sfix29_En25
  reg signed [28:0] Delay14_out1;  // sfix29_En25
  wire signed [29:0] Add14_add_cast;  // sfix30_En25
  wire signed [29:0] Add14_add_cast_1;  // sfix30_En25
  wire signed [29:0] Add14_out1;  // sfix30_En25
  wire signed [49:0] Gain14_cast;  // sfix50_En44
  wire signed [48:0] Gain14_cast_1;  // sfix49_En44
  wire signed [30:0] Gain14_out1;  // sfix31_En26
  reg signed [30:0] Delay15_out1;  // sfix31_En26
  wire signed [31:0] Add15_add_cast;  // sfix32_En26
  wire signed [31:0] Add15_add_cast_1;  // sfix32_En26
  wire signed [31:0] Add15_add_temp;  // sfix32_En26
  wire signed [30:0] Add15_out1;  // sfix31_En26
  wire signed [50:0] Gain15_cast;  // sfix51_En45
  wire signed [49:0] Gain15_cast_1;  // sfix50_En45
  wire signed [31:0] Gain15_out1;  // sfix32_En27
  reg signed [31:0] Delay16_out1;  // sfix32_En27
  wire signed [32:0] Add16_add_cast;  // sfix33_En27
  wire signed [32:0] Add16_add_cast_1;  // sfix33_En27
  wire signed [32:0] Add16_add_temp;  // sfix33_En27
  wire signed [31:0] Add16_out1;  // sfix32_En27
  wire signed [51:0] Gain16_cast;  // sfix52_En46
  wire signed [50:0] Gain16_cast_1;  // sfix51_En46
  wire signed [31:0] Gain16_out1;  // sfix32_En28


  always @(posedge clk)
    begin : Delay_rsvd_process
      if (enb_1_12_0) begin
        Delay_out1 <= In1;
      end
    end



  assign Add_add_cast = {In1[18], In1};
  assign Add_add_cast_1 = {Delay_out1[18], Delay_out1};
  assign Add_add_temp = Add_add_cast + Add_add_cast_1;
  assign Add_cast = ((Add_add_temp[19] == 1'b0) && (Add_add_temp[18] != 1'b0) ? 19'sb0111111111111111111 :
              ((Add_add_temp[19] == 1'b1) && (Add_add_temp[18] != 1'b1) ? 19'sb1000000000000000000 :
              $signed(Add_add_temp[18:0])));
  assign Add_out1 = ((Add_cast[18] == 1'b0) && (Add_cast[17] != 1'b0) ? 19'sb0111111111111111111 :
              ((Add_cast[18] == 1'b1) && (Add_cast[17] != 1'b1) ? 19'sb1000000000000000000 :
              {Add_cast[17:0], 1'b0}));



  assign Gain_cast = {{2{Add_out1[18]}}, {Add_out1, 18'b000000000000000000}};
  assign Gain_cast_1 = Gain_cast[37:0];
  assign Gain_out1 = (((Gain_cast_1[37] == 1'b0) && (Gain_cast_1[36] != 1'b0)) || ((Gain_cast_1[37] == 1'b0) 
    && (Gain_cast_1[36:18] == 19'sb0111111111111111111)) ? 19'sb0111111111111111111 :
              ((Gain_cast_1[37] == 1'b1) && (Gain_cast_1[36] != 1'b1) ? 19'sb1000000000000000000 :
              Gain_cast_1[36:18] + $signed({1'b0, Gain_cast_1[17]})));



  always @(posedge clk)
    begin : Delay1_process
      if (enb_1_12_0) begin
        Delay1_out1 <= Gain_out1;
      end
    end



  assign Add1_add_cast = {Gain_out1[18], Gain_out1};
  assign Add1_add_cast_1 = {Delay1_out1[18], Delay1_out1};
  assign Add1_out1 = Add1_add_cast + Add1_add_cast_1;



  assign Gain1_cast = {{2{Add1_out1[19]}}, {Add1_out1, 18'b000000000000000000}};
  assign Gain1_cast_1 = Gain1_cast[38:0];
  assign Gain1_out1 = (((Gain1_cast_1[38] == 1'b0) && (Gain1_cast_1[37] != 1'b0)) || ((Gain1_cast_1[38] == 
    1'b0) && (Gain1_cast_1[37:19] == 19'sb0111111111111111111)) ? 19'sb0111111111111111111 :
              ((Gain1_cast_1[38] == 1'b1) && (Gain1_cast_1[37] != 1'b1) ? 19'sb1000000000000000000 :
              Gain1_cast_1[37:19] + $signed({1'b0, Gain1_cast_1[18]})));



  always @(posedge clk)
    begin : Delay2_process
      if (enb_1_12_0) begin
        Delay2_out1 <= Gain1_out1;
      end
    end



  assign Add2_add_cast = ({Gain1_out1[18], Gain1_out1[18:1]}) + $signed({1'b0, Gain1_out1[0]});
  assign Add2_add_cast_1 = ({Delay2_out1[18], Delay2_out1[18:1]}) + $signed({1'b0, Delay2_out1[0]});
  assign Add2_out1 = Add2_add_cast + Add2_add_cast_1;



  assign Gain2_cast = {{2{Add2_out1[18]}}, {Add2_out1, 18'b000000000000000000}};
  assign Gain2_cast_1 = Gain2_cast[37:0];
  assign Gain2_out1 = (((Gain2_cast_1[37] == 1'b0) && (Gain2_cast_1[36] != 1'b0)) || ((Gain2_cast_1[37] == 
    1'b0) && (Gain2_cast_1[36:18] == 19'sb0111111111111111111)) ? 19'sb0111111111111111111 :
              ((Gain2_cast_1[37] == 1'b1) && (Gain2_cast_1[36] != 1'b1) ? 19'sb1000000000000000000 :
              Gain2_cast_1[36:18] + $signed({1'b0, Gain2_cast_1[17]})));



  always @(posedge clk)
    begin : Delay3_process
      if (enb_1_12_0) begin
        Delay3_out1 <= Gain2_out1;
      end
    end



  assign Add3_add_cast = ({Gain2_out1[18], Gain2_out1[18:1]}) + $signed({1'b0, Gain2_out1[0]});
  assign Add3_add_cast_1 = ({Delay3_out1[18], Delay3_out1[18:1]}) + $signed({1'b0, Delay3_out1[0]});
  assign Add3_out1 = Add3_add_cast + Add3_add_cast_1;



  assign Gain3_cast = {{2{Add3_out1[18]}}, {Add3_out1, 18'b000000000000000000}};
  assign Gain3_cast_1 = Gain3_cast[37:0];
  assign Gain3_out1 = (((Gain3_cast_1[37] == 1'b0) && (Gain3_cast_1[36] != 1'b0)) || ((Gain3_cast_1[37] == 
    1'b0) && (Gain3_cast_1[36:18] == 19'sb0111111111111111111)) ? 19'sb0111111111111111111 :
              ((Gain3_cast_1[37] == 1'b1) && (Gain3_cast_1[36] != 1'b1) ? 19'sb1000000000000000000 :
              Gain3_cast_1[36:18] + $signed({1'b0, Gain3_cast_1[17]})));



  always @(posedge clk)
    begin : Delay4_process
      if (enb_1_12_0) begin
        Delay4_out1 <= Gain3_out1;
      end
    end



  assign Add4_add_cast = ({Gain3_out1[18], Gain3_out1[18:1]}) + $signed({1'b0, Gain3_out1[0]});
  assign Add4_add_cast_1 = ({Delay4_out1[18], Delay4_out1[18:1]}) + $signed({1'b0, Delay4_out1[0]});
  assign Add4_out1 = Add4_add_cast + Add4_add_cast_1;



  assign Gain4_cast = {{2{Add4_out1[18]}}, {Add4_out1, 18'b000000000000000000}};
  assign Gain4_cast_1 = Gain4_cast[37:0];
  assign Gain4_out1 = (((Gain4_cast_1[37] == 1'b0) && (Gain4_cast_1[36] != 1'b0)) || ((Gain4_cast_1[37] == 
    1'b0) && (Gain4_cast_1[36:18] == 19'sb0111111111111111111)) ? 19'sb0111111111111111111 :
              ((Gain4_cast_1[37] == 1'b1) && (Gain4_cast_1[36] != 1'b1) ? 19'sb1000000000000000000 :
              Gain4_cast_1[36:18] + $signed({1'b0, Gain4_cast_1[17]})));



  always @(posedge clk)
    begin : Delay5_process
      if (enb_1_12_0) begin
        Delay5_out1 <= Gain4_out1;
      end
    end



  assign Add5_add_cast = {Gain4_out1[18], Gain4_out1};
  assign Add5_add_cast_1 = {Delay5_out1[18], Delay5_out1};
  assign Add5_out1 = Add5_add_cast + Add5_add_cast_1;



  assign Gain5_cast = {{2{Add5_out1[19]}}, {Add5_out1, 18'b000000000000000000}};
  assign Gain5_cast_1 = Gain5_cast[38:0];
  assign Gain5_out1 = ((Gain5_cast_1[38] == 1'b0) && (Gain5_cast_1[37:18] == 20'b11111111111111111111) ? 
    21'sb011111111111111111111 :
              Gain5_cast_1[38:18] + $signed({1'b0, Gain5_cast_1[17]}));



  always @(posedge clk)
    begin : Delay6_process
      if (enb_1_12_0) begin
        Delay6_out1 <= Gain5_out1;
      end
    end



  assign Add6_add_cast = {Gain5_out1[20], Gain5_out1};
  assign Add6_add_cast_1 = {Delay6_out1[20], Delay6_out1};
  assign Add6_add_temp = Add6_add_cast + Add6_add_cast_1;
  assign Add6_out1 = ((Add6_add_temp[21] == 1'b0) && (Add6_add_temp[20] != 1'b0) ? 21'sb011111111111111111111 
    :
              ((Add6_add_temp[21] == 1'b1) && (Add6_add_temp[20] != 1'b1) ? 21'sb100000000000000000000 :
              $signed(Add6_add_temp[20:0])));



  assign Gain6_cast = {{2{Add6_out1[20]}}, {Add6_out1, 18'b000000000000000000}};
  assign Gain6_cast_1 = Gain6_cast[39:0];
  assign Gain6_out1 = ((Gain6_cast_1[39] == 1'b0) && (Gain6_cast_1[38:18] == 21'b111111111111111111111) ? 
    22'sb0111111111111111111111 :
              Gain6_cast_1[39:18] + $signed({1'b0, Gain6_cast_1[17]}));



  always @(posedge clk)
    begin : Delay7_process
      if (enb_1_12_0) begin
        Delay7_out1 <= Gain6_out1;
      end
    end



  assign Add7_add_cast = {Gain6_out1[21], Gain6_out1};
  assign Add7_add_cast_1 = {Delay7_out1[21], Delay7_out1};
  assign Add7_out1 = Add7_add_cast + Add7_add_cast_1;



  assign Gain7_cast = {{2{Add7_out1[22]}}, {Add7_out1, 18'b000000000000000000}};
  assign Gain7_cast_1 = Gain7_cast[41:0];
  assign Gain7_out1 = (((Gain7_cast_1[41] == 1'b0) && (Gain7_cast_1[40] != 1'b0)) || ((Gain7_cast_1[41] == 
    1'b0) && (Gain7_cast_1[40:18] == 23'sb01111111111111111111111)) ? 23'sb01111111111111111111111 :
              ((Gain7_cast_1[41] == 1'b1) && (Gain7_cast_1[40] != 1'b1) ? 23'sb10000000000000000000000 :
              Gain7_cast_1[40:18] + $signed({1'b0, Gain7_cast_1[17]})));



  always @(posedge clk)
    begin : Delay8_process
      if (enb_1_12_0) begin
        Delay8_out1 <= Gain7_out1;
      end
    end



  assign Add8_add_cast = {Gain7_out1[22], Gain7_out1};
  assign Add8_add_cast_1 = {Delay8_out1[22], Delay8_out1};
  assign Add8_out1 = Add8_add_cast + Add8_add_cast_1;



  assign Gain8_cast = {{2{Add8_out1[23]}}, {Add8_out1, 18'b000000000000000000}};
  assign Gain8_cast_1 = Gain8_cast[42:0];
  assign Gain8_out1 = (((Gain8_cast_1[42] == 1'b0) && (Gain8_cast_1[41] != 1'b0)) || ((Gain8_cast_1[42] == 
    1'b0) && (Gain8_cast_1[41:18] == 24'sb011111111111111111111111)) ? 24'sb011111111111111111111111 :
              ((Gain8_cast_1[42] == 1'b1) && (Gain8_cast_1[41] != 1'b1) ? 24'sb100000000000000000000000 :
              Gain8_cast_1[41:18] + $signed({1'b0, Gain8_cast_1[17]})));



  always @(posedge clk)
    begin : Delay9_process
      if (enb_1_12_0) begin
        Delay9_out1 <= Gain8_out1;
      end
    end



  assign Add9_add_cast = {Gain8_out1[23], Gain8_out1};
  assign Add9_add_cast_1 = {Delay9_out1[23], Delay9_out1};
  assign Add9_add_temp = Add9_add_cast + Add9_add_cast_1;
  assign Add9_out1 = ((Add9_add_temp[24] == 1'b0) && (Add9_add_temp[23] != 1'b0) ? 
    24'sb011111111111111111111111 :
              ((Add9_add_temp[24] == 1'b1) && (Add9_add_temp[23] != 1'b1) ? 24'sb100000000000000000000000 :
              $signed(Add9_add_temp[23:0])));



  assign Gain9_cast = {{2{Add9_out1[23]}}, {Add9_out1, 18'b000000000000000000}};
  assign Gain9_cast_1 = Gain9_cast[42:0];
  assign Gain9_out1 = ((Gain9_cast_1[42] == 1'b0) && (Gain9_cast_1[41:18] == 24'b111111111111111111111111) ? 
    25'sb0111111111111111111111111 :
              Gain9_cast_1[42:18] + $signed({1'b0, Gain9_cast_1[17]}));



  always @(posedge clk)
    begin : Delay10_process
      if (enb_1_12_0) begin
        Delay10_out1 <= Gain9_out1;
      end
    end



  assign Add10_add_cast = {Gain9_out1[24], Gain9_out1};
  assign Add10_add_cast_1 = {Delay10_out1[24], Delay10_out1};
  assign Add10_out1 = Add10_add_cast + Add10_add_cast_1;



  assign Gain10_cast = {{2{Add10_out1[25]}}, {Add10_out1, 18'b000000000000000000}};
  assign Gain10_cast_1 = Gain10_cast[44:0];
  assign Gain10_out1 = ((Gain10_cast_1[44] == 1'b0) && (Gain10_cast_1[43:18] == 
    26'b11111111111111111111111111) ? 27'sb011111111111111111111111111 :
              Gain10_cast_1[44:18] + $signed({1'b0, Gain10_cast_1[17]}));



  always @(posedge clk)
    begin : Delay11_process
      if (enb_1_12_0) begin
        Delay11_out1 <= Gain10_out1;
      end
    end



  assign Add11_add_cast = {Gain10_out1[26], Gain10_out1};
  assign Add11_add_cast_1 = {Delay11_out1[26], Delay11_out1};
  assign Add11_add_temp = Add11_add_cast + Add11_add_cast_1;
  assign Add11_out1 = ((Add11_add_temp[27] == 1'b0) && (Add11_add_temp[26] != 1'b0) ? 
    27'sb011111111111111111111111111 :
              ((Add11_add_temp[27] == 1'b1) && (Add11_add_temp[26] != 1'b1) ? 
                27'sb100000000000000000000000000 :
              $signed(Add11_add_temp[26:0])));



  assign Gain11_cast = {{2{Add11_out1[26]}}, {Add11_out1, 18'b000000000000000000}};
  assign Gain11_cast_1 = Gain11_cast[45:0];
  assign Gain11_out1 = ((Gain11_cast_1[45] == 1'b0) && (Gain11_cast_1[44:18] == 
    27'b111111111111111111111111111) ? 28'sb0111111111111111111111111111 :
              Gain11_cast_1[45:18] + $signed({1'b0, Gain11_cast_1[17]}));



  always @(posedge clk)
    begin : Delay12_process
      if (enb_1_12_0) begin
        Delay12_out1 <= Gain11_out1;
      end
    end



  assign Add12_add_cast = {Gain11_out1[27], Gain11_out1};
  assign Add12_add_cast_1 = {Delay12_out1[27], Delay12_out1};
  assign Add12_add_temp = Add12_add_cast + Add12_add_cast_1;
  assign Add12_out1 = ((Add12_add_temp[28] == 1'b0) && (Add12_add_temp[27] != 1'b0) ? 
    28'sb0111111111111111111111111111 :
              ((Add12_add_temp[28] == 1'b1) && (Add12_add_temp[27] != 1'b1) ? 
                28'sb1000000000000000000000000000 :
              $signed(Add12_add_temp[27:0])));



  assign Gain12_cast = {{2{Add12_out1[27]}}, {Add12_out1, 18'b000000000000000000}};
  assign Gain12_cast_1 = Gain12_cast[46:0];
  assign Gain12_out1 = ((Gain12_cast_1[46] == 1'b0) && (Gain12_cast_1[45:18] == 
    28'b1111111111111111111111111111) ? 29'sb01111111111111111111111111111 :
              Gain12_cast_1[46:18] + $signed({1'b0, Gain12_cast_1[17]}));



  always @(posedge clk)
    begin : Delay13_process
      if (enb_1_12_0) begin
        Delay13_out1 <= Gain12_out1;
      end
    end



  assign Add13_add_cast = {Gain12_out1[28], Gain12_out1};
  assign Add13_add_cast_1 = {Delay13_out1[28], Delay13_out1};
  assign Add13_add_temp = Add13_add_cast + Add13_add_cast_1;
  assign Add13_out1 = ((Add13_add_temp[29] == 1'b0) && (Add13_add_temp[28] != 1'b0) ? 
    29'sb01111111111111111111111111111 :
              ((Add13_add_temp[29] == 1'b1) && (Add13_add_temp[28] != 1'b1) ? 
                29'sb10000000000000000000000000000 :
              $signed(Add13_add_temp[28:0])));



  assign Gain13_cast = {{2{Add13_out1[28]}}, {Add13_out1, 18'b000000000000000000}};
  assign Gain13_cast_1 = Gain13_cast[47:0];
  assign Gain13_out1 = (((Gain13_cast_1[47] == 1'b0) && (Gain13_cast_1[46] != 1'b0)) || ((Gain13_cast_1[47] 
    == 1'b0) && (Gain13_cast_1[46:18] == 29'sb01111111111111111111111111111)) ? 
    29'sb01111111111111111111111111111 :
              ((Gain13_cast_1[47] == 1'b1) && (Gain13_cast_1[46] != 1'b1) ? 
                29'sb10000000000000000000000000000 :
              Gain13_cast_1[46:18] + $signed({1'b0, Gain13_cast_1[17]})));



  always @(posedge clk)
    begin : Delay14_process
      if (enb_1_12_0) begin
        Delay14_out1 <= Gain13_out1;
      end
    end



  assign Add14_add_cast = {Gain13_out1[28], Gain13_out1};
  assign Add14_add_cast_1 = {Delay14_out1[28], Delay14_out1};
  assign Add14_out1 = Add14_add_cast + Add14_add_cast_1;



  assign Gain14_cast = {{2{Add14_out1[29]}}, {Add14_out1, 18'b000000000000000000}};
  assign Gain14_cast_1 = Gain14_cast[48:0];
  assign Gain14_out1 = ((Gain14_cast_1[48] == 1'b0) && (Gain14_cast_1[47:18] == 
    30'b111111111111111111111111111111) ? 31'sb0111111111111111111111111111111 :
              Gain14_cast_1[48:18] + $signed({1'b0, Gain14_cast_1[17]}));



  always @(posedge clk)
    begin : Delay15_process
      if (enb_1_12_0) begin
        Delay15_out1 <= Gain14_out1;
      end
    end



  assign Add15_add_cast = {Gain14_out1[30], Gain14_out1};
  assign Add15_add_cast_1 = {Delay15_out1[30], Delay15_out1};
  assign Add15_add_temp = Add15_add_cast + Add15_add_cast_1;
  assign Add15_out1 = ((Add15_add_temp[31] == 1'b0) && (Add15_add_temp[30] != 1'b0) ? 
    31'sb0111111111111111111111111111111 :
              ((Add15_add_temp[31] == 1'b1) && (Add15_add_temp[30] != 1'b1) ? 
                31'sb1000000000000000000000000000000 :
              $signed(Add15_add_temp[30:0])));



  assign Gain15_cast = {{2{Add15_out1[30]}}, {Add15_out1, 18'b000000000000000000}};
  assign Gain15_cast_1 = Gain15_cast[49:0];
  assign Gain15_out1 = ((Gain15_cast_1[49] == 1'b0) && (Gain15_cast_1[48:18] == 
    31'b1111111111111111111111111111111) ? 32'sb01111111111111111111111111111111 :
              Gain15_cast_1[49:18] + $signed({1'b0, Gain15_cast_1[17]}));



  always @(posedge clk)
    begin : Delay16_process
      if (enb_1_12_0) begin
        Delay16_out1 <= Gain15_out1;
      end
    end



  assign Add16_add_cast = {Gain15_out1[31], Gain15_out1};
  assign Add16_add_cast_1 = {Delay16_out1[31], Delay16_out1};
  assign Add16_add_temp = Add16_add_cast + Add16_add_cast_1;
  assign Add16_out1 = ((Add16_add_temp[32] == 1'b0) && (Add16_add_temp[31] != 1'b0) ? 
    32'sb01111111111111111111111111111111 :
              ((Add16_add_temp[32] == 1'b1) && (Add16_add_temp[31] != 1'b1) ? 
                32'sb10000000000000000000000000000000 :
              $signed(Add16_add_temp[31:0])));



  assign Gain16_cast = {{2{Add16_out1[31]}}, {Add16_out1, 18'b000000000000000000}};
  assign Gain16_cast_1 = Gain16_cast[50:0];
  assign Gain16_out1 = (((Gain16_cast_1[50] == 1'b0) && (Gain16_cast_1[49] != 1'b0)) || ((Gain16_cast_1[50] 
    == 1'b0) && (Gain16_cast_1[49:18] == 32'sb01111111111111111111111111111111)) ? 
    32'sb01111111111111111111111111111111 :
              ((Gain16_cast_1[50] == 1'b1) && (Gain16_cast_1[49] != 1'b1) ? 
                32'sb10000000000000000000000000000000 :
              Gain16_cast_1[49:18] + $signed({1'b0, Gain16_cast_1[17]})));



  assign Out1 = Gain16_out1;

endmodule  // First_Block_H2_z

